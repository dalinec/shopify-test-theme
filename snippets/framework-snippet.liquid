<div id="framework-snippet">
  <link rel="stylesheet" href="{{ 'newsletter-custom.css' | asset_url }}">
  <div id="root"></div>
</div>

{% comment %} load the script just when it is in view - like lazyload {% endcomment %}
<script>
  const scripts = [
    "{{ 'vite-client.js' | asset_url }}",
    {% comment %} "{{ 'vite-counter.js' | asset_url }}", {% endcomment %}
    "{{ 'vite-newsletter.js' | asset_url }}",
  ];

  function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
  }

  const isSubscribed = getCookie('newsletter_subscribed');
  const isClosed = getCookie('newsletter_closed');

  // If either cookie is present, hide the #framework-snippet
  if (!isSubscribed && !isClosed) {
    setTimeout(function () {
      const newsletter = document.getElementById('framework-snippet');
      if (newsletter) {
        newsletter.style.opacity = '1';
      }
    }, 2000);
  } 
  }
  {% if template.name == 'product' %}
    scripts.push("{{ 'vite-add-to-cart-button.js' | asset_url }}");
  {% endif %}


  const observer = new IntersectionObserver((entries, observer) => {
    if(entries[0].isIntersecting) {
      for(const script of scripts) {
        const scriptElement = document.createElement('script');
        scriptElement.setAttribute("type", "module");
        scriptElement.setAttribute("src", script);
        scriptElement.setAttribute("defer", "defer");

        document.body.appendChild(scriptElement);
      }
      console.log("scripts added");
      observer.disconnect();
    }
  }, { threshold: 1 });

  observer.observe(document.querySelector("#framework-snippet"));
</script>
